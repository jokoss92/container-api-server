pipeline {
    agent {
        label 'agent01'
    }
    environment {
        NAME = 'container-api-server'
        NOTIF = credentials('notif-discord')
    }
    stages {
        stage('Clone Repository'){
            steps {
                echo 'Clone repository'
                sh 'rm -rf container-api-server'
                sh 'git clone https://github.com/jokoss92/container-api-server.git'
            }
        }
        stage('Build'){
            steps {
               echo 'Build image'
               sh 'docker build -t us-central1-docker.pkg.dev/powerful-unison-413810/batch10/api-server .'
            }
        }
         stage('Push to Artifact Registry'){
            steps {
                echo 'Push to Artifact Registry'
                sh 'docker push us-central1-docker.pkg.dev/powerful-unison-413810/batch10/api-server .'
            }
        }
    }
     post {
            always {
                echo 'Jobs triggered'
                discordSend description: "Jenkins Pipeline Build", footer: "Jobs triggered", link: env.BUILD_URL, result: currentBuild.currentResult, title: JOB_NAME, webhookURL: "$NOTIF"
            }
            success {
                 echo 'Jobs success'
                 discordSend description: "Jenkins Pipeline Build", footer: "Jobs success", link: env.BUILD_URL, result: currentBuild.currentResult, title: JOB_NAME, webhookURL: "$NOTIF"
            }
            failure {
                echo 'Jobs failure'
                discordSend description: "Jenkins Pipeline Build", footer: "Jobs failure", link: env.BUILD_URL, result: currentBuild.currentResult, title: JOB_NAME, webhookURL: "$NOTIF"
            }
            aborted {
                echo 'Jobs aborted'
                discordSend description: "Jenkins Pipeline Build", footer: "Jobs aborted", link: env.BUILD_URL, result: currentBuild.currentResult, title: JOB_NAME, webhookURL: "$NOTIF"
            }
        }
}
