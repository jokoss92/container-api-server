# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]

jobs:

  build-docker-and-push:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Test
      run: go test -v ./...

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push docker image
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: johnojss/container-api-server:${{ github.run_number }}

  deploy-container-to-vm:
    name: Deploy container image to VM
    runs-on: self-hosted
    needs: build-docker-and-push
    steps:
    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        script: |
          docker login --username=${{ secrets.DOCKERHUB_USERNAME }} --password=${{ secrets.DOCKERHUB_TOKEN }}
          docker pull johnojss/container-api-server:${{ github.run_number }}
          docker stop api-server.
          docker rm api-server.
          docker run --name api-server. -d -p 8000:8000 johnojss/container-api-server:${{ github.run_number }}

  send-notif-to-discord:
    name: Send notification to Discord channel
    runs-on: self-hosted
    needs: deploy-container-to-vm
    steps:
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'The project {{ EVENT_PAYLOAD.repository.full_name }} has been deployed.'